version: '3.8'

services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      target: builder
    environment:
      - REACT_APP_API_URL=http://localhost/api
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  backend:
    build: ./backend
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/taskdb
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend-logs:/app/logs
    command: npm run dev

  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=taskdb
    volumes:
      - mongo-data:/data/db
      - ./mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - app-network
    ports:
      - "27017:27017"

  redis:
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - app-network
    ports:
      - "6379:6379"

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
  nginx-logs:
  backend-logs: